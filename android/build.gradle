group = "dev.mostafamovahhed.traccar_flutter"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "1.8.22"
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.1.0")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    if (project.android.hasProperty("namespace")) {
        namespace = "dev.mostafamovahhed.traccar_flutter"
    }

    compileSdk = 34

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 21
    }

    dependencies {
        implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.6'
        implementation 'androidx.profileinstaller:profileinstaller:1.4.1'
        implementation 'androidx.tracing:tracing:1.2.0'
        implementation 'com.google.android.material:material:1.12.0'
        implementation 'androidx.multidex:multidex:2.0.1'
        implementation 'androidx.preference:preference-ktx:1.2.1'
        implementation 'androidx.core:core-ktx:1.13.1'
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.22"
        implementation 'com.github.judemanutd:autostarter:1.1.0'
//        implementation('dev.doubledot.doki:library:0.0.1@aar') {
//            transitive = true
//        }
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
